#CONFIG PORT
server:
  port: 9091
  max-http-header-size: 48000

# SPRING CONFIG
spring:
#  main:
#    web-application-type: none
  #  DATASOURCE MARIADB
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/mar-platform?createDatabaseIfNotExist=false&autoReconnect=true&UseUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: false

  # KAFKA CONFIGURATION
  kafka:
    #Producer's Kafka cluster address
    bootstrap-servers: 172.17.0.1:9092,172.17.0.1:9092
    listener:
      missing-topics-fatal: false
    # CONFIG PRODUCER
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    # CONFIG CONSUMER
    consumer:
      group-id: product_service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    # TOPICS
    topics:
      default:
        replication-factor: 8
        partition-count: 1

  devtools:
    add-properties: false

management:
  endpoint:
    web:
      exposure:
        include: "*"
    health:
      show-details: always


# JWT config
kafka:
  topic:
    check-balance: check_balance
    fund: fund

business-service:
  url: http://172.17.0.1:9093
  auth-key: MzQ2YTM2NmUtOTg1ZS00MjY4LTgzYzQtY2JkNTYyMjQ3OWNi
  end-point:
    check-balance: /business/check-balance
    fund: /business/fund
  field:
    check-balance:
      balance: data
job:
  cron:
    get-all-product-value: 0 0 17 * * *